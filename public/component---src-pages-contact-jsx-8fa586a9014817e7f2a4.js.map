{"version":3,"file":"component---src-pages-contact-jsx-8fa586a9014817e7f2a4.js","mappings":"kPASC,IAEoBA,EAAK,YACxB,WAAYC,GAAQ,IAAD,EAEmB,OADpC,cAAMA,IAAM,MAIdC,aAAgBC,IACd,EAAKC,SAAS,CAAE,CAACD,EAAEE,OAAOC,MAAOH,EAAEE,OAAOE,OAAQ,EAClD,EAEFC,aAAgBL,IACdA,EAAEM,iBACF,MAAMC,EAAOP,EAAEE,OAlBnB,IAAgBM,EAmBZC,MAAM,IAAK,CACTC,OAAQ,OACRC,QAAS,CAAE,eAAgB,qCAC3BC,MAtBUJ,EAsBG,CACX,YAAaD,EAAKM,aAAa,WAC5B,EAAKC,OAvBPC,OAAOC,KAAKR,GAChBS,KAAKC,GAAQC,mBAAmBD,GAAO,IAAMC,mBAAmBX,EAAKU,MACrEE,KAAK,QAwBHC,MAAK,KAAMC,EAAAA,EAAAA,IAASf,EAAKM,aAAa,aACtCU,OAAOC,GAAUC,MAAMD,IAAO,EAnBjC,EAAKV,MAAQ,CAAEY,aAAa,GAAQ,CACtC,CAqIC,OAzIuB,YAIvB,YAsBDC,OAAA,WACE,OACE,gBAACC,EAAO,KACN,2BACE,2BAASC,UAAU,gBACjB,sBAAIA,UAAU,SAAO,gBACrB,qBAAGA,UAAU,iBAAe,yGAI5B,uBAAKA,UAAU,yBACZC,KAAKhB,MAAMiB,aAAe,yBAAID,KAAKhB,MAAMiB,cAE5C,wBACI5B,KAAK,UACL0B,UAAU,kCACVnB,OAAO,OACPsB,OAAO,WAGP,wBAAsB,YACtBC,SAAUH,KAAKzB,cAGf,yBAAO6B,KAAK,SAAS/B,KAAK,YAAYC,MAAM,YAC5C,uBAAK+B,QAAM,GACT,oDACuB,IACrB,yBAAOhC,KAAK,YAAYiC,SAAUN,KAAK/B,iBAG3C,uBAAK8B,UAAU,SAIb,uBAAKA,UAAU,uBACb,yBACEA,UAAU,sBACVK,KAAM,OACN/B,KAAM,OACNiC,SAAUN,KAAK/B,aACfsC,GAAI,OACJC,UAAU,EACVC,YAAY,WAIlB,uBAAKV,UAAU,SAIb,uBAAKA,UAAU,uBACb,yBACEA,UAAU,sBACVK,KAAM,QACN/B,KAAM,QACNiC,SAAUN,KAAK/B,aACfsC,GAAI,QACJC,UAAU,EACVC,YAAY,YAIlB,uBAAKV,UAAU,SAIb,uBAAKA,UAAU,wBACb,4BACEA,UAAU,sBACV1B,KAAM,UACNiC,SAAUN,KAAK/B,aACfsC,GAAI,UACJC,UAAU,EACVC,YAAY,cAIlB,uBAAKV,UAAU,4CACb,0BAAQA,UAAU,sCAAsCK,KAAK,UAAQ,UAK3E,qBAAGL,UAAU,QAAM,aACN,IACX,qBACEA,UAAU,OACVW,KAAK,0CACLtC,OAAO,UAAQ,iBAGb,IACF,OAkBd,EAAC,EAzIuB,CAASuC,EAAAA,WA4InC,MAAMb,EAAUc,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,m2DCtI1B,MAZgB,IAEZ,gBAACC,EAAA,EAAM,KACL,gBAAC,IAAG,CACFC,MAAM,uBACNC,YAAY,2EAEd,gBAAC,EAAW,M","sources":["webpack://revista-gatsby-starter/./src/components/ContactForm.jsx","webpack://revista-gatsby-starter/./src/pages/contact.jsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from 'styled-components'\n\nimport { navigate } from \"gatsby-link\";\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n}\n\nexport default class Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { isValidated: false };\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.target;\n    fetch(\"/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n      body: encode({\n        \"form-name\": form.getAttribute(\"name\"),\n        ...this.state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute(\"action\")))\n      .catch((error) => alert(error));\n  };\n\n\n  render() {\n    return (\n      <Wrapper>\n        <div>\n          <section className=\"get-in-touch\">\n            <h1 className=\"title\">Get in touch</h1>\n            <p className=\"note subtitle\">\n              Have a question? We'd love to hear from you. Send us a message and\n              we'll respond as soon as possible.\n            </p>\n            <div className=\"column  is-two-thirds\">\n              {this.state.feedbackMsg && <p>{this.state.feedbackMsg}</p>}\n            </div>\n            <form\n                name=\"contact\"\n                className=\"contact-form-styles contact-row\"\n                method=\"post\"\n                action=\"/success\"\n                // Uncomment below line for Netlify Forms to work!\n                // data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n                onSubmit={this.handleSubmit}\n              >\n                {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n                <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n                <div hidden>\n                  <label>\n                    Donâ€™t fill this out:{\" \"}\n                    <input name=\"bot-field\" onChange={this.handleChange} />\n                  </label>\n                </div>\n                <div className=\"field\">\n                  {/* <label className=\"label\" htmlFor={\"name\"}>\n                    Your name\n                  </label> */}\n                  <div className=\"form-field col x-50\">\n                    <input\n                      className=\"input-text js-input\"\n                      type={\"text\"}\n                      name={\"name\"}\n                      onChange={this.handleChange}\n                      id={\"name\"}\n                      required={true}\n                      placeholder=\"Name\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  {/* <label className=\"label\" htmlFor={\"email\"}>\n                    Email\n                  </label> */}\n                  <div className=\"form-field col x-50\">\n                    <input\n                      className=\"input-text js-input\"\n                      type={\"email\"}\n                      name={\"email\"}\n                      onChange={this.handleChange}\n                      id={\"email\"}\n                      required={true}\n                      placeholder=\"Email\"\n                    />\n                  </div>\n                </div>\n                <div className=\"field\">\n                  {/* <label className=\"label\" htmlFor={\"message\"}>\n                    Message\n                  </label> */}\n                  <div className=\"form-field col x-100\">\n                    <textarea\n                      className=\"input-text js-input\"\n                      name={\"message\"}\n                      onChange={this.handleChange}\n                      id={\"message\"}\n                      required={true}\n                      placeholder=\"Message\"\n                    />\n                  </div>\n                </div>\n                <div className=\"form-field submit col x-100 align-center\">\n                  <button className=\"btn btn-outline-primary contact-btn\" type=\"submit\">\n                    Send\n                  </button>\n                </div>\n              </form>\n            <p className=\"note\">\n              Powered by{' '}\n              <a\n                className=\"link\"\n                href=\"https://www.netlify.com/products/forms/\"\n                target=\"_blank\"\n              >\n                Netlify Forms\n              </a>\n              .{' '}\n            </p>\n            {/* Not necessary, feel free to delete. Especially if not using Static Forms */}\n            {/* <p className=\"note\">\n              The information you submit in this form <u>is not stored</u>, per{' '}\n              <a\n                href=\"https://www.staticforms.xyz/privacy\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Static Form's Privacy Policy\n              </a>\n              . It is directly forwarded to our email.\n            </p> */}\n          </section>\n        </div>\n      </Wrapper>\n    )\n  }\n}\n\nconst Wrapper = styled.div`\n  .align-center {\n    text-align: center;\n  }\n\n  .subtitle {\n    padding: 1.5rem 0 2.5rem;\n  }\n\n  input:focus label {\n    color: transparent;\n  }\n\n  .notification p {\n    line-height: 0;\n    margin-bottom: 0;\n  }\n\n  // Grid\n  .contact-row {\n    margin: -20px 0;\n    .col {\n      padding: 0 20px;\n      float: left;\n      box-sizing: border-box;\n      &.x-50 {\n        width: 50%;\n      }\n      &.x-100 {\n        width: 100%;\n      }\n    }\n  }\n\n  @media only screen and (max-width: 576px) {\n    .contact-row .col.x-50 {\n      width: 100%;\n    }\n  }\n\n  @media only screen and (max-width: 398px) {\n    .contact-row {\n      padding: 0 5vw;\n      display: block;\n    }\n  }\n\n  .content-wrapper {\n    min-height: 100%;\n    position: relative;\n  }\n\n  .get-in-touch {\n    max-width: 650px;\n    margin: 5rem auto;\n    position: relative;\n    display: block;\n    font-family: var(--ff-primary), sans-serif;\n\n    .title {\n      text-align: center;\n      font-family: var(--ff-primary), sans-serif;\n      text-transform: uppercase;\n      letter-spacing: 3px;\n      font-size: 36px;\n      line-height: 48px;\n      /* padding-bottom: 48px; */\n    }\n  }\n\n  .contact-form-styles {\n    .form-field {\n      position: relative;\n      margin: 32px 0;\n    }\n    .input-text {\n      display: block;\n      width: 100%;\n      height: 36px;\n      border-width: 0 0 2px 0;\n      border-radius: 0px;\n      border-color: var(--primary-6);\n      font-family: var(--ff-primary), sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n      font-weight: 400;\n      background-color: transparent;\n\n      &:focus {\n        outline: none;\n      }\n\n      &:focus,\n      &.not-empty {\n        + .label {\n          transform: translateY(-24px);\n        }\n      }\n    }\n    .label {\n      position: absolute;\n      left: 20px;\n      bottom: 11px;\n      font-size: 18px;\n      line-height: 26px;\n      font-weight: 400;\n      color: #7e7e7e;\n      cursor: text;\n      transition: transform 0.2s ease-in-out;\n    }\n  }\n\n  .note {\n    width: 100%;\n    text-align: center;\n    line-height: 21px;\n    font-size: 1.125em;\n  }\n\n  @media only screen and (max-width: 690px) {\n    .note {\n      padding: 0 5vw;\n    }\n\n    .subtitle {\n      margin: 1rem auto 1.3rem;\n    }\n  }\n\n  .contact-btn {\n    padding: 1rem 2rem;\n  }\n  @media only screen and (max-width: 767px) {\n    .submit {\n      margin-bottom: 3rem !important;\n    }\n  }\n\n  .is-hidden {\n    display: none !important;\n  }\n\n  .is-danger {\n    background-color: #f14668;\n    border-color: transparent;\n\n    p {\n      color: #fff !important;\n    }\n  }\n\n  .is-primary {\n    background-color: #48c78e;\n    border-color: transparent;\n\n    p {\n      color: #fff !important;\n    }\n  }\n\n  .notification {\n    padding: 1.5rem 2rem;\n    border-radius: 5px;\n    display: inline-block;\n    margin-bottom: 0.5rem;\n  }\n`\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Seo from '../components/SEO'\nimport ContactForm from '../components/ContactForm'\n\nconst contact = () => {\n  return (\n    <Layout>\n      <Seo\n        title=\"Contact Us | Revista\"\n        description=\"Reach out for any inquiries, or find out how you can help our mission!\"\n      />\n      <ContactForm />\n    </Layout>\n  )\n}\n\nexport default contact\n"],"names":["Index","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","form","data","fetch","method","headers","body","getAttribute","state","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","isValidated","render","Wrapper","className","this","feedbackMsg","action","onSubmit","type","hidden","onChange","id","required","placeholder","href","React","styled","Layout","title","description"],"sourceRoot":""}