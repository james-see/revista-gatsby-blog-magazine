{"version":3,"file":"component---src-pages-categories-jsx-1ee29816651b38a66744.js","mappings":"4LAIO,MAAMA,EAAa,CACxB,CAAEC,SAAU,MAAOC,MAAO,WAC1B,CAAED,SAAU,WAAYC,MAAO,WAC/B,CAAED,SAAU,aAAcC,MAAO,WACjC,CAAED,SAAU,SAAUC,MAAO,WAC7B,CAAED,SAAU,UAAWC,MAAO,WAC9B,CAAED,SAAU,aAAcC,MAAO,WACjC,CAAED,SAAU,aAAcC,MAAO,WACjC,CAAED,SAAU,UAAWC,MAAO,WAC9B,CAAED,SAAU,aAAcC,MAAO,WACjC,CAAED,SAAU,iBAAkBC,MAAO,YAI1BC,EAAYC,IACvB,MAAMC,EAAQL,EAAWM,MAAKC,GAAWA,EAAQN,SAASO,gBAAkBJ,EAAaI,gBAGzF,OAAQH,EAAQA,EAAMH,MAAQ,SAAS,C,8ICfzC,MAwDMO,EAAUC,EAAAA,QAAAA,QAAAA,WAAc,kEAAdA,CAAc,sdA6C9B,MA7FsB,KACpB,MAAMC,GAAOC,EAAAA,EAAAA,IATJ,eAYPC,QAAUC,SAAUC,IAClBJ,EAEJ,OACE,gBAACF,EAAO,KACN,uBAAKO,UAAU,8BACb,uBAAKA,UAAU,OACb,uBAAKA,UAAU,YACb,sBAAIA,UAAU,kCAAgC,kBAC9C,uBAAKA,UAAU,2BACZD,EAAcE,KAAI,CAAChB,EAAUI,KAC5B,MAAMH,GAAQC,EAAAA,EAAAA,GAASF,GACvB,OACE,gCACE,gBAAC,KAAI,CACHe,UAAU,gBACVE,IAAKb,EACLc,GAAE,IAAMlB,EAASmB,eAEjB,uBACEJ,UAAU,iBACVK,MAAO,CAAEC,gBAAiBpB,KAE5B,uBAAKc,UAAU,YAAYf,IAE5B,MAIJ,IACP,uBAAKe,UAAU,sCACb,gBAAC,EAAAO,EAAW,CACVC,IAAI,iCACJC,IAAI,2BACJC,OAAO,cACPC,YAAY,UAAS,yBAKrB,EC1Cd,MAZmB,IAEf,gBAACC,EAAA,EAAM,KACL,gBAAC,IAAG,CACFC,MAAM,uBACNC,YAAY,gDAEd,gBAAC,EAAa,M","sources":["webpack://revista-gatsby-starter/./src/components/utils/heroCategories.jsx","webpack://revista-gatsby-starter/./src/components/utils/AllCategories.jsx","webpack://revista-gatsby-starter/./src/pages/categories.jsx"],"sourcesContent":["// IMPORTANT NOTE\n// These are the categories displayed on the homepage hero section, NOT all categories\n// There may be more categories, which will all be listed on the All Categories page\n\nexport const categories = [\n  { category: 'Art', color: '#ffb8b0' },\n  { category: 'Business', color: '#fdffba' },\n  { category: 'Creativity', color: '#b7ffff' },\n  { category: 'Health', color: '#ffd6c5' },\n  { category: 'History', color: '#ffffca' },\n  { category: 'Philosophy', color: '#ffcdf8' },\n  { category: 'Psychology', color: '#ceebff' },\n  { category: 'Science', color: '#ffc7d6' },\n  { category: 'Technology', color: '#c4ffd4' },\n  { category: 'All Categories', color: '#c9c4ff' },\n]\n\n\nexport const getColor = (whatCategory) => {\n  const index = categories.find(element => element.category.toUpperCase() === whatCategory.toUpperCase())\n\n  //if undefined, return default\n  return (index ? index.color : '#c9c4ff');\n}\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport { getColor } from './heroCategories'\nimport { StaticImage } from 'gatsby-plugin-image'\n\nconst query = graphql`\n  query AllCategories {\n    allMdx(sort: { frontmatter: { category: ASC } }) {\n      distinct(field: { frontmatter: { category: SELECT } })\n    }\n  }\n`\n\nconst AllCategories = () => {\n  const data = useStaticQuery(query)\n\n  const {\n    allMdx: { distinct: allCategories },\n  } = data\n\n  return (\n    <Wrapper>\n      <div className=\"container categories-page \">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h1 className=\"section-title categories-title\">All Categories</h1>\n            <div className=\"categories-list col-12 \">\n              {allCategories.map((category, index) => {\n                const color = getColor(category)\n                return (\n                  <>\n                    <Link\n                      className=\"item not-blue\"\n                      key={index}\n                      to={`/${category.toLowerCase()}`}\n                    >\n                      <div\n                        className=\"category-color\"\n                        style={{ backgroundColor: color }}\n                      ></div>\n                      <div className=\"category\">{category}</div>\n                    </Link>\n                  </>\n                )\n              })}\n            </div>\n          </div>{' '}\n          <div className=\"col-12 col-md-6 all-categories-img\">\n            <StaticImage\n              src=\"../../assets/undraw_choice.svg\"\n              alt=\"Open Source Illustration\"\n              layout=\"constrained\"\n              placeholder=\"blurred\"\n            />\n          </div>\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.section`\n  .categories-page {\n    margin-top: 5rem;\n    margin-bottom: 5rem;\n\n    h1 {\n      margin-bottom: 4rem;\n      font-size: 180%;\n    }\n  }\n\n  .item {\n    display: flex;\n    align-items: center;\n    font-size: 120%;\n  }\n\n  .category {\n    margin: 1rem 1rem;\n    display: flex;\n    align-items: center;\n  }\n  .category-color {\n    width: 30px;\n    height: 30px;\n    background-color: #bbb;\n    border-radius: 50%;\n    display: inline-block;\n    padding: 10px;\n  }\n\n  .all-categories-img {\n    align-self: center;\n    padding: 5rem;\n  }\n\n  @media screen and (max-width: 767px) {\n    .item {\n      margin-bottom: 1rem;\n      width: 50%;\n      display: inline-flex;\n    }\n  }\n`\n\nexport default AllCategories\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Seo from '../components/SEO'\nimport AllCategories from '../components/utils/AllCategories'\n\nconst categories = () => {\n  return (\n    <Layout>\n      <Seo\n        title=\"Categories | Revista\"\n        description=\"List of all categories currently on Revista\"\n      />\n      <AllCategories />\n    </Layout>\n  )\n}\n\nexport default categories\n"],"names":["categories","category","color","getColor","whatCategory","index","find","element","toUpperCase","Wrapper","styled","data","useStaticQuery","allMdx","distinct","allCategories","className","map","key","to","toLowerCase","style","backgroundColor","S","src","alt","layout","placeholder","Layout","title","description"],"sourceRoot":""}