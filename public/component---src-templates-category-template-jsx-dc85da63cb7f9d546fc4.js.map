{"version":3,"file":"component---src-templates-category-template-jsx-dc85da63cb7f9d546fc4.js","mappings":"0LAQA,MAaMA,EAAgBC,EAAAA,QAAAA,MAAAA,WAAY,mEAAZA,CAAY,8RAmBlC,IAhCoB,IAEhB,uBAAKC,UAAU,mBACb,gBAACF,EAAa,KACZ,gBAAC,IAAK,MACN,gBAAC,IAAQ,MACT,gBAAC,IAAiB,O,qLCH1B,MAiEMG,EAAUF,EAAAA,QAAAA,QAAAA,WAAc,yDAAdA,CAAc,k3CA6G9B,MA9Ka,IAAuC,IAAtC,QAAEG,EAAO,YAAEC,EAAW,OAAEC,GAAQ,EAC5C,MAAM,MAAEC,EAAK,MAAEC,EAAK,KAAEC,EAAI,SAAEC,GAAaL,GACnC,MAAEM,GAAUL,EAAOM,WACzB,OACE,gBAACT,EAAO,KACN,gBAAC,IAAG,CAACI,MAAOA,EAAOM,YAAaT,IAChC,2BAASF,UAAU,iDACjB,gBAAC,KAAI,CACHY,GAAE,IAAMJ,EAASK,cAAa,IAAIC,IAAQT,EAAO,CAAEU,OAAO,KAE1D,gBAAC,EAAAC,EAAW,CAACV,OAAOW,EAAAA,EAAAA,GAASX,GAAQY,IAAKb,EAAOL,UAAU,SAI7D,uBAAKA,UAAU,gCACb,gBAAC,KAAI,CACHY,GAAE,IAAMJ,EAASK,cAAa,IAAIC,IAAQT,EAAO,CAAEU,OAAO,KAE1D,0BAAKV,IAGP,sBAAIL,UAAU,yBACZ,sBAAIA,UAAU,oBACZ,gBAAC,MAAoB,MACpBmB,KAAKC,KAAKX,EAAQ,KAAI,aAEzB,sBAAIT,UAAU,oBACZ,gBAAC,MAAU,MAAG,IAAEO,GAElB,sBAAIP,UAAU,oBACZ,sBAAIA,UAAU,6BACZ,sBAAIA,UAAU,oBACZ,gBAAC,KAAI,CACHY,GAAE,IAAMJ,EAASK,cACjBb,UAAU,gBACVqB,MAAO,CACLC,OAAOC,EAAAA,EAAAA,GAASf,GAChBgB,iBAAiBD,EAAAA,EAAAA,GAASf,KAG5B,uBAAKR,UAAU,uBAAuBQ,QAMhD,gBAAC,KAAI,CACHR,UAAU,eACVY,GAAE,IAAMJ,EAASK,cAAa,IAAIC,IAAQT,EAAO,CAAEU,OAAO,KAE1D,qBAAGf,UAAU,WAAWE,IAG1B,gBAAC,KAAI,CACHF,UAAU,0BACVY,GAAE,IAAMJ,EAASK,cAAa,IAAIC,IAAQT,EAAO,CAAEU,OAAO,KAAU,eAMlE,E,UC7Cd,MAxBc,IAAuB,IAAtB,MAAEU,EAAK,MAAEpB,GAAO,EAC7B,OACE,2BAASL,UAAU,mBACjB,uBAAKA,UAAU,OACb,uBAAKA,UAAU,mBACb,sBAAIA,UAAU,gCAA8B,eAC9B,4BAAOK,IAErB,uBAAKL,UAAU,IAEb,2BAASA,UAAU,uCAChByB,EAAMC,KAAIC,GACF,gBAAC,EAAI,eAACC,IAAKD,EAAKE,IAAQF,SAMvC,gBAAC,IAAO,OAEF,EChBd,MAsDMG,EAAsB/B,EAAAA,QAAAA,QAAAA,WAAc,kFAAdA,CAAc,oBAI1C,MA1DyBgC,IACvB,MACEC,MACEC,YAAcC,MAAOT,KAErBM,GAEFI,aAAa,SAAE3B,IACbuB,EAEJ,OACE,gCACE,gBAACK,EAAA,EAAM,KACL,gBAACN,EAAmB,KAClB,gBAAC,EAAK,CAACL,MAAOA,EAAOpB,MAAK,GAAKG,MAGnC,gBAAC,IAAG,CACFH,MAAUG,EAAQ,eAClBG,YAAW,0BAA4BH,EAAQ,eAEhD,C","sources":["webpack://revista-gatsby-starter/./src/components/Sidebar/indexWide.js","webpack://revista-gatsby-starter/./src/components/Posts/Post.js","webpack://revista-gatsby-starter/./src/components/Posts/index.js","webpack://revista-gatsby-starter/./src/templates/category-template.jsx"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport About from './About'\nimport Partners from './Partners'\nimport SidebarCategories from './SidebarCategories'\nimport './sidebar-styles.scss'\n// import SidebarImage from './SidebarImage'\n\nconst SidebarWide = () => {\n  return (\n    <div className=\"col-lg-4 col-12\">\n      <SidebarStyles>\n        <About />\n        <Partners />\n        <SidebarCategories />\n        {/* <SidebarImage/> */}\n      </SidebarStyles>\n    </div>\n  )\n}\n\nconst SidebarStyles = styled.aside`\n  display: grid;\n  grid-template-columns: 200px;\n  justify-content: center;\n  row-gap: 1rem;\n  margin-top: 3.4rem;\n  @media (min-width: 576px) {\n    & {\n      grid-template-columns: repeat(auto-fit, 92%);\n      column-gap: 3rem;\n    }\n  }\n  @media screen and (max-width: 767px) {\n    grid-template-columns: calc(100vw - 30px);\n\n    margin-bottom: 3rem;\n  }\n`\n\nexport default SidebarWide\n","import React from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { AiOutlineClockCircle } from 'react-icons/ai'\nimport { GoCalendar } from 'react-icons/go'\nimport { getColor } from '../utils/heroCategories'\nimport Seo from '../SEO'\nimport slugify from 'slugify'\nimport '../featured/features-styles.scss'\n\nconst Post = ({ excerpt, frontmatter, fields }) => {\n  const { title, image, date, category } = frontmatter\n  const { words } = fields.timeToRead\n  return (\n    <Wrapper>\n      <Seo title={title} description={excerpt} />\n      <article className=\"card card-bg card-shadow category-card-margin\">\n        <Link\n          to={`/${category.toLowerCase()}/${slugify(title, { lower: true })}`}\n        >\n          <GatsbyImage image={getImage(image)} alt={title} className=\"img\" />\n          {/* <img className='top-and-popular-img' src={imageSource} alt={title} /> */}\n        </Link>\n\n        <div className=\"card-body category-page-card\">\n          <Link\n            to={`/${category.toLowerCase()}/${slugify(title, { lower: true })}`}\n          >\n            <h3>{title}</h3>\n          </Link>\n\n          <ul className=\"card-meta list-inline\">\n            <li className=\"list-inline-item\">\n              <AiOutlineClockCircle />\n              {Math.ceil(words / 275)} Min Read\n            </li>\n            <li className=\"list-inline-item\">\n              <GoCalendar /> {date}\n            </li>\n            <li className=\"list-inline-item\">\n              <ul className=\"card-meta-tag list-inline\">\n                <li className=\"list-inline-item\">\n                  <Link\n                    to={`/${category.toLowerCase()}`}\n                    className=\"category-link\"\n                    style={{\n                      color: getColor(category),\n                      backgroundColor: getColor(category),\n                    }}\n                  >\n                    <div className=\"category-text-color\">{category}</div>\n                  </Link>\n                </li>\n              </ul>\n            </li>\n          </ul>\n          <Link\n            className=\"excerpt-link\"\n            to={`/${category.toLowerCase()}/${slugify(title, { lower: true })}`}\n          >\n            <p className=\"excerpt\">{excerpt}</p>\n          </Link>\n\n          <Link\n            className=\"btn btn-outline-primary\"\n            to={`/${category.toLowerCase()}/${slugify(title, { lower: true })}`}\n          >\n            Read More\n          </Link>\n        </div>\n      </article>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.article`\n  margin-bottom: 3rem;\n  .info {\n    text-align: center;\n  }\n\n  .excerpt-link {\n    color: var(--grey-6);\n  }\n\n  .category-page-card {\n    padding: 15px 25px 30px 25px;\n  }\n\n  .img {\n    margin-bottom: 1rem;\n    border-radius: var(--radius);\n    height: 17rem;\n  }\n  .category {\n    display: inline-block;\n    margin-bottom: 1rem;\n    background: var(--clr-grey-10);\n    padding: 0.25rem 0.5rem;\n    text-transform: uppercase;\n    font-weight: 700;\n    border-radius: var(--radius);\n    letter-spacing: var(--spacing);\n    color: var(--clr-grey-5);\n  }\n  h3 {\n    font-weight: 400;\n    margin-bottom: 1rem;\n    text-transform: initial;\n  }\n  .underline {\n    width: 5rem;\n    height: 1px;\n    background: var(--clr-grey-9);\n    margin: 0 auto;\n    margin-bottom: 1rem;\n  }\n  p {\n    color: var(--clr-grey-5);\n    line-height: 1.8;\n  }\n  .link {\n    text-transform: uppercase;\n    letter-spacing: var(--spacing);\n    font-weight: 700;\n    color: var(--clr-primary-5);\n    padding-bottom: 0.1rem;\n    display: flex;\n    align-items: center;\n    svg {\n      margin-left: 0.25rem;\n      font-size: 1.2rem;\n    }\n  }\n  .link:hover {\n    border-color: var(--clr-primary-8);\n    color: var(--clr-primary-8);\n  }\n  footer {\n    margin-top: 2rem;\n    padding-top: 1rem;\n    border-top: 1px solid var(--clr-grey-9);\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    color: var(--clr-grey-5);\n\n    & .date {\n      display: flex;\n      align-items: center;\n      & .icon {\n        color: var(--clr-primary-5);\n        margin-right: 0.5rem;\n      }\n    }\n  }\n  @media (min-width: 600px) {\n    .img {\n      height: 20rem;\n    }\n  }\n  @media (min-width: 800px) {\n    .img {\n      height: 25rem;\n    }\n  }\n  @media (min-width: 992px) {\n    & {\n      width: 50%;\n      .info {\n        text-align: left;\n      }\n      .img {\n        height: 100%;\n        max-height: 20rem;\n      }\n      .underline {\n        margin-left: 0;\n        margin-right: 0;\n      }\n    }\n  }\n`\n\nexport default Post\n","import React from 'react'\nimport Post from './Post'\nimport Sidebar from '../Sidebar/indexWide'\nconst Posts = ({ posts, title }) => {\n  return (\n    <section className=\"posts container\">\n      <div className=\"row\">\n        <div className=\"col-lg-8 col-12\">\n          <h3 className=\"section-title category-title\">\n            category // <span>{title}</span>\n          </h3>\n          <div className=\"\">\n            {/* posts column */}\n            <article className=\"flex flex-wrap category-card-margin\">\n              {posts.map(post => {\n                return <Post key={post.id} {...post} />\n              })}\n            </article>\n            {/* banner column */}\n          </div>\n        </div>\n        <Sidebar />\n      </div>\n    </section>\n  )\n}\n\nexport default Posts\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Posts from '../components/Posts'\nimport { graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport Seo from '../components/SEO'\n\nconst CategoryTemplate = props => {\n  const {\n    data: {\n      categories: { nodes: posts },\n    },\n  } = props\n  const {\n    pageContext: { category },\n  } = props\n\n  return (\n    <>\n      <Layout>\n        <CategoryPostsStyles>\n          <Posts posts={posts} title={`${category}`} />\n        </CategoryPostsStyles>\n      </Layout>\n      <Seo\n        title={`${category} | InsightDC`}\n        description={`Top Resources to Learn ${category} for free.`}\n      />\n    </>\n  )\n}\n\nexport const query = graphql`\n  query GetCategories($category: String) {\n    categories: allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      nodes {\n        fields {\n          timeToRead {\n            words\n          }\n        }\n        excerpt(pruneLength: 60)\n        frontmatter {\n          title\n          category\n          date(formatString: \"MMMM, Do YYYY\")\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: CONSTRAINED, placeholder: BLURRED)\n            }\n            size\n          }\n        }\n      }\n    }\n  }\n`\n\nconst CategoryPostsStyles = styled.section`\n  margin: 4rem 0;\n`\n\nexport default CategoryTemplate\n"],"names":["SidebarStyles","styled","className","Wrapper","excerpt","frontmatter","fields","title","image","date","category","words","timeToRead","description","to","toLowerCase","slugify","lower","G","getImage","alt","Math","ceil","style","color","getColor","backgroundColor","posts","map","post","key","id","CategoryPostsStyles","props","data","categories","nodes","pageContext","Layout"],"sourceRoot":""}